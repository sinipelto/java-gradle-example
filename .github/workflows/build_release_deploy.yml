# Copyright 2024 Tampere University
# 
# Main authors: Toni BlÃ¥field
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in 
# the Software without restriction, including without limitation the rights to 
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so, 
# subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS 
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR 
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN 
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

# ---------------------------------------------------------------------------------

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# https://docs.github.com/en/actions/use-cases-and-examples/publishing-packages/publishing-java-packages-with-gradle
# https://github.com/actions/upload-artifact

# About setting up gradle
# https://github.com/gradle/actions/blob/main/setup-gradle/README.md

# REPOSITORY
# https://github.com/sinipelto/cicd-test

name: Test CI Pipeline for Build and Release and Deploy

on:
  push:
    branches:
      - master
      - release
    paths-ignore:
      - '**/*.md'
      - '**/*.txt'
      - 'version'

env:
  # VERSION FROM FILE
  APP_NAME: 'test-app'
  BUILD_DIR: 'build/libs'
  ENVIRONMENT: 'Production'

jobs:
  build:
    # runs-on is required even though using container!
    runs-on: ubuntu-latest
    # GH WF does support only defaults: run: currently,
    # so container: image: has to be specified separately each job
    container:
      image: eclipse-temurin:8u422-b05-jdk

    # TODO: How to consolidate perms in GL?
    permissions:
      contents: read

    steps:
      # NOTE: There is no similar action in GL!
      # TODO: How do we checkout to ref in GH???
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - uses: actions/cache@v4
        with:
          key: ${{ github.run_id }}
          path: |
            **/*.gradle*
            **/gradle-wrapper.properties

      - run: |
          ./gradlew build --no-daemon

  test:
    runs-on: ubuntu-latest
    container:
      image: eclipse-temurin:8u422-b05-jdk

    permissions:
      contents: read

    needs:
      - build
    
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - uses: actions/cache@v4
        with:
          key: ${{ github.run_id }}
          path: |
            '**/*.gradle*'
            '**/gradle-wrapper.properties'

      - uses: AppThreat/sast-scan-action@1.0.2
        with:
          type: java,bash,json,credscan,depscan

      - run: |
          ./gradlew test --no-daemon

  release_pre:
    runs-on: ubuntu-latest

    # TODO: specify git container here
    container:
      image: bitnami/git:latest

    permissions:
      contents: write

    needs:
      - build
      - test

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      # Cache is not needed here
      # Consolidate by including each step cache

      - run: |
          chmod +x version.sh
          VERSION_OLD=$(cat version)
          VERSION=$(./version.sh $VERSION_OLD)
          echo "VERSION_OLD=$VERSION_OLD" >> ${GITHUB_ENV:-build.env}
          echo "VERSION=$VERSION" >> ${GITHUB_ENV:-build.env}
          echo $VERSION > version
          git config --global --add safe.directory "$(pwd)"
          git config user.name "DevOps User"
          git config user.email "devops@company.com"
          git add version
          git commit -m "[skip ci] Automatic Bump Version from v${VERSION_OLD} to v${VERSION}."
          chmod +x push.sh
          ./push.sh $GITHUB_SERVER_URL $GITHUB_REF_NAME

  release_post:
    runs-on: ubuntu-latest
    container:
      image: eclipse-temurin:8u422-b05-jdk

    permissions:
      contents: write

    needs:
      - build
      - test
      - release_pre

    steps:
      # NOTE: INSTALLS GIT IF MISSING IN THE CONTAINER IMAGE!!
      # COMPARE GITLAB: HAS TO BE MANUALLY INSTALLED IN THE IMAGE
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - uses: actions/cache@v4
        with:
          key: ${{ github.run_id }}
          path: |
            **/*.gradle*
            **/gradle-wrapper.properties

      # build and test jobs successfully run at this point
      # Safe to assume jar will pass OK 
      - run: |
          VERSION=$(cat version)
          echo "VERSION=$VERSION" >> ${GITHUB_ENV:-build.env}
          ./gradlew jar --no-daemon
          mv -v ${BUILD_DIR}/*.jar ${APP_NAME}_v${VERSION}.jar

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}_v${{ env.VERSION }}
          if-no-files-found: error
          retention-days: 7
          compression-level: 0
          overwrite: true
          include-hidden-files: false
          path: |
            version
            Readme.txt
            ${{ env.APP_NAME }}_v${{ env.VERSION }}.jar

  release:
    runs-on: ubuntu-latest
    container:
      image: registry.gitlab.com/gitlab-org/release-cli:latest

    permissions:
      contents: write

    needs:
      - build
      - test
      - release_pre
      - release_post

    steps:
      # NOTE: INSTALLS GIT IF MISSING IN THE CONTAINER IMAGE!!
      # COMPARE GITLAB: HAS TO BE MANUALLY INSTALLED IN THE IMAGE
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      # Script is not needed here
      # so no commands executed

      # Cache is not needed here
      # Consolidate by including each step cache

      - run: |
          VERSION=$(cat version)
          echo "VERSION=$VERSION" >> ${GITHUB_ENV:-build.env}

      # Compare GL: dependecies: job or needs: job: artifacts: true
      - uses: actions/download-artifact@v4
        with:
          name: ${{ env.APP_NAME }}_v${{ env.VERSION }}

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          title: "Automatic Release v${{ env.VERSION }}"
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: v${{ env.VERSION }}
          draft: false
          prerelease: false
          files: |
            version
            Readme.txt
            ${{ env.APP_NAME }}_v${{ env.VERSION }}.jar

  deploy:
    runs-on: ubuntu-latest
    container:
      image: eclipse-temurin:8u422-b05-jdk

    permissions:
      contents: read
      packages: write
      deployments: write

    needs:
      - build
      - test
      - release_pre
      - release_post
      - release

    # Publish to production environment
    # TODO: how to parameterize name? cannot acccess env.* only vars.*
    environment:
      name: Production
      url: ${{ github.repositoryUrl }}

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - uses: actions/cache@v4
        with:
          key: ${{ github.run_id }}
          path: |
            '**/*.gradle*'
            '**/gradle-wrapper.properties'

      - run: |
          VERSION=$(cat version)
          echo "VERSION=$VERSION" >> ${GITHUB_ENV:-build.env}
          ./gradlew publish --no-daemon

      - uses: actions/download-artifact@v4
        with:
          name: ${{ env.APP_NAME }}_v${{ env.VERSION }}

      # TODO: PUBLISH PACKAGE TO GITHUB PACKAGES
